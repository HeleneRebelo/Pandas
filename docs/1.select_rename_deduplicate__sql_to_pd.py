# -*- coding: utf-8 -*-
"""1-select-rename-deduplicate__sql-to-pd.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IpXgIQ-M1OFlUskhWCiz-GRApnc7C2dq

# From SQL to Pandas Challenge 1
"""

# import libraries
import pandas as pd

# load data
# This code is made to load our data stored on Google Drive
def gd_path(file_id):
    """Generate a shareable link from Google Drive file id."""
    return f"https://drive.google.com/uc?export=download&id={file_id}"

# Google Drive file ids
files_id = {
    "titleauthor": "1F1JOiYXStWacOBca6coNVfyVtoST7ZgD",
    "titles": "1PLdn50N9GRa53ZbuVWo0l47F_IXdvlEm",
    "sales": "1fzFc9rwYmVIPaGOFmhLVxCi3kg19vNU2",
    "publishers": "1s9E8_AVOziTrowb3wyh2jg3PV763VOyq",
    "jobs": "1V1Za8hUdXD-vJOyRdX4aQV5wanIff2eM",
    "authors": "1fEF89Nhe61EebAljKlwFwfEuokK0o6aJ"
}

# Read data from Google Drive
sales = pd.read_csv(gd_path(files_id["sales"]), sep=";")
authors = pd.read_csv(gd_path(files_id["authors"]), sep=";")
titleauthor = pd.read_csv(gd_path(files_id["titleauthor"]), sep=";")
publishers = pd.read_csv(gd_path(files_id["publishers"]), sep=";")
jobs = pd.read_csv(gd_path(files_id["jobs"]), sep=";")
titles = pd.read_csv(gd_path(files_id["titles"]), sep=";")

"""We have loaded the tables:

* `sales`
* `authors`
* `titleauthor`
* `publishers`
* `jobs`
* `titles`

You can use them by writing `sales`, `authors`, `titleauthor`, `publishers`, `jobs` or `titles` in a cell.

## 1.&nbsp;Select everything from the table authors
"""

authors

"""### HINT

The syntax to select everything from a table in SQL is:

```sql
SELECT * FROM authors;
```

## 2.&nbsp;Select everything from the tables "titles", "titleauthor", "publishers" and "sales" (one table at a time). Look at the raw data and think about how these tables are related to each other.
"""

display(titles, titleauthor, publishers, sales)

"""### HINT

The syntax to select everything from a table in SQL is:

```sql
SELECT * FROM titles;

SELECT * FROM titleauthor;

SELECT * FROM publishers;

SELECT * FROM sales;
```

## 3.&nbsp;Select the authors first and last name
"""

authors[['au_fname', 'au_lname']]

"""### HINT

The syntax to select everything from a table in SQL is:

```sql
SELECT
    au_fname, au_lname
FROM
    authors
```

## 4.&nbsp;Select the publisher names
"""

publishers['pub_name']

"""### HINT

The syntax to select everything from a table in SQL is:

```sql
SELECT
    pub_name
FROM
    publishers;
```

## 5.&nbsp;Select the title, price and year-to-date sales of all titles
"""

titles[['title', 'price', 'ytd_sales']]

"""### HINT

The syntax to select everything from a table in SQL is:

```sql
SELECT
    title, price, ytd_sales
FROM
    titles;
```

## 6.&nbsp;Select all the authors first names, but display the column with the alias "first_name"
"""

authors[['au_fname']].rename(columns = {'au_fname': 'first_name'})

"""### HINT

The syntax to select everything from a table in SQL is:

```sql
SELECT
	au_fname AS first_name
FROM
	authors;
```

You can rename columns in pandas with the `rename` method, here is the link to the [documentation](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.rename.html).

## 7.&nbsp;Select the job id and job description of all jobs, but display the columns with the names "id" and "description"
"""

jobs[['job_id', 'job_desc']].rename(columns = {'job_id': 'id', 'job_desc': 'description'})

"""### HINT

```sql
SELECT
	job_id AS id,
	job_desc AS description
FROM
	jobs;
```

You can rename columns in pandas with the `rename` method, here is the link to the [documentation](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.rename.html).

## 8.&nbsp;Select all unique last names of authors (the same last name cannot appear more than once)
"""

authors['au_lname'].unique()

"""### HINT

```sql
SELECT
	DISTINCT au_lname
FROM
	authors;
```

## 9.&nbsp;Select all unique title id's that were involved in a sale
"""

sales['title_id'].unique()

"""### HINT

```sql
SELECT
	DISTINCT title_id
FROM
	sales;
```
"""