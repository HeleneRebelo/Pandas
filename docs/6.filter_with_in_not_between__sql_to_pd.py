# -*- coding: utf-8 -*-
"""6-filter-with-in-not-between__sql-to-pd.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cjes6Dm9bgZ0ToKBqCsMhvCJdH8oSgQW

# From SQL to pandas challenge 6
"""

# import libraries
import pandas as pd

# load data
# This code is made to load our data stored on Google Drive
def gd_path(file_id):
    """Generate a shareable link from Google Drive file id."""
    return f"https://drive.google.com/uc?export=download&id={file_id}"

# Google Drive file ids
files_id = {
    "titles": "1PLdn50N9GRa53ZbuVWo0l47F_IXdvlEm",
    "stores": "1f-GCgip7O93CpbAkYvOsc21eKnSOSHsQ",
    "sales": "1fzFc9rwYmVIPaGOFmhLVxCi3kg19vNU2",
    "jobs": "1V1Za8hUdXD-vJOyRdX4aQV5wanIff2eM",
    "authors": "1fEF89Nhe61EebAljKlwFwfEuokK0o6aJ"
}

# Read data from Google Drive
stores = pd.read_csv(gd_path(files_id["stores"]), sep=";")
titles = pd.read_csv(gd_path(files_id["titles"]), sep=";")
authors = pd.read_csv(gd_path(files_id["authors"]), sep=";")
sales = pd.read_csv(gd_path(files_id["sales"]), sep=";")
jobs = pd.read_csv(gd_path(files_id["jobs"]), sep=";")

"""## 1.&nbsp;Select the name and state of all stores located in either California (CA) or Oregon (OR)"""

stores

stores.loc[stores['state'].str.contains("CA")|stores['state'].str.contains("OR"), ('stor_name','state')]

# OR
stores.loc[stores.state.isin(['CA', 'OR']), ['stor_name', 'stor_address', 'state']]

"""### Hint:

In SQL the syntax is:

```sql
SELECT stor_name,stor_address,state  
FROM stores  
WHERE state IN("CA","OR");
```

## 2.&nbsp;Using `.isin()`, select all titles of type "psychology", "mod_cook" and "trad_cook"
"""

titles.loc[titles.type.isin(["psychology", "mod_cook", "trad_cook"]), ['title', 'type']]

# OR
titles.loc[titles["type"].isin(type), ('title','type')]

"""### Hint:

In SQL the syntax is:

```sql
SELECT title,type
FROM titles
WHERE type IN('psychology','mod_cook','trad_cook');
```

## 3.&nbsp;Select all the authors from the authors table that do not come from the cities Salt Lake City, Ann Arbor, and Oakland.
"""

authors.loc[~authors.city.isin(['Salt Lake City', 'Ann Arbor', 'Oakland'])]

"""### Hint:

In SQL the syntax is:

```sql
SELECT *
FROM authors
WHERE city NOT IN ('Salt Lake City', 'Ann Arbor', 'Oakland');
```

## 4.&nbsp;Select all the order numbers with a quantity sold between 25 and 45 from the table sales
"""

sales.loc[sales.qty.between(25, 45), ['ord_num', 'qty']]

"""### Hint:

In SQL the syntax is:

```sql
SELECT ord_num, qty
FROM sales
WHERE qty BETWEEN 25 AND 45;
```

## 5.&nbsp;Select all the sales between 1993-03-11 and 1994-09-13
"""

sales.ord_date = pd.to_datetime(sales.ord_date)
sales.loc[sales.ord_date.between("1993-03-11", "1994-09-13")]

"""### Hint:

In SQL the syntax is:

```sql
SELECT *
FROM sales
WHERE ord_date BETWEEN "1993-03-11" AND "1994-09-13";
```

## 6.&nbsp;Select all job descriptions with a maximum level ("max_lvl") between 150 and 200.
"""

jobs.loc[jobs.max_lvl.between(150, 200), ['job_desc', 'max_lvl']]

"""### Hint:

In SQL the syntax is:

```sql
SELECT job_desc, max_lvl
FROM jobs
WHERE max_lvl BETWEEN 150 AND 200;
```
"""