# -*- coding: utf-8 -*-
"""CÃ³pia de 2-filter-data__sql-to-pd.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zRScOBOoNHazXiWmruiESV7B8ROjUbLf

# From SQL to Pandas Challenge 2

First, we'll need to set up the tables again, so we can work with them.
"""

# import libraries
import pandas as pd

# load data
# This code is made to load our data stored on Google Drive
def gd_path(file_id):
    """Generate a shareable link from Google Drive file id."""
    return f"https://drive.google.com/uc?export=download&id={file_id}"

# Google Drive file ids
files_id = {
    "sales": "1fzFc9rwYmVIPaGOFmhLVxCi3kg19vNU2",
    "publishers": "1s9E8_AVOziTrowb3wyh2jg3PV763VOyq",
    "authors": "1fEF89Nhe61EebAljKlwFwfEuokK0o6aJ"
}

# Read data from Google Drive
sales = pd.read_csv(gd_path(files_id["sales"]), sep=";")
authors = pd.read_csv(gd_path(files_id["authors"]), sep=";")
publishers = pd.read_csv(gd_path(files_id["publishers"]), sep=";")

"""## 1.&nbsp;Select first and last name from authors who have the last name "Ringer"
"""

authors.loc[authors['au_lname'] == 'Ringer', ['au_fname', 'au_lname']]

"""### Hint:

In SQL the syntax is:

```sql
SELECT au_fname, au_lname
FROM authors
WHERE au_lname="Ringer";
```

## 2.&nbsp;Select the order number and order date of all sales where *exactly* 20 books were sold.
"""

sales.loc[sales['qty'] == 20, ['ord_num', 'ord_date']]

"""### Hint:

In SQL the syntax is:

```sql
SELECT ord_num, ord_date, qty
FROM sales
WHER'E qty = 20;
```

## 3.&nbsp;Select first and last name from authors whose last name is "Ringer" and first name is "Anne"
"""

authors.loc[(authors['au_lname'] == 'Ringer') & (authors['au_fname'] == 'Anne'), ['au_fname', 'au_lname']]

"""### Hint:

In SQL the syntax is:

```sql
SELECT au_fname, au_lname
FROM authors
WHERE au_fname = "Anne"
AND au_lname = "Ringer";
```

## 4.&nbsp;Select the name and city of publishers based in either Germany or France
"""

publishers.loc[publishers['country'].isin(['Germany', 'France']), ['pub_name', 'city']]

"""### Hint:

In SQL the syntax is:

```sql
SELECT pub_name, city
FROM publishers
WHERE country='Germany'
OR country='France';
```

## 5.&nbsp;Select first name, last name and city from authors whose first name is "Dean" and whose city is either "Oakland" or "Berkeley"
"""

authors.loc[(authors['au_fname'] == 'Dean') & authors['city'].isin(['Oakland', 'Berkeley']), ['au_fname', 'au_lname', 'city']]

"""### Hint:

In SQL the syntax is:

```sql
SELECT au_fname,au_lname,city
FROM authors
WHERE au_fname ="Dean"
AND (city ="Oakland" OR city = "Berkeley");
```

## 6.&nbsp;Select the name, city and country of publishers, not based in the USA
"""

publishers.loc[publishers['country'] != 'USA', ['pub_name', 'city', 'country']]

"""### Hint:

The SQL syntax is:
```sql
SELECT pub_name, city,country
FROM publishers
WHERE NOT country="USA";
```

## 7.&nbsp;Select first name, last name and city from authors whose city is "Oakland" or "Berkeley", and last name is **not** "Straight"
"""

authors.loc[authors['city'].isin(['Oakland', 'Berkeley']) & (authors['au_lname'] != 'Straight'), ['au_fname', 'au_lname', 'city']]

"""### Hint:

In SQL the syntax is:
```sql
SELECT au_fname, au_lname, city
FROM authors
WHERE (city = "Oakland" OR city = "Berkeley")
AND NOT au_lname = "Straight";
```
"""