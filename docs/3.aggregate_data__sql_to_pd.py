# -*- coding: utf-8 -*-
"""CÃ³pia de 3-aggregate-data__sql-to-pd.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SruO_M78F9M7mxdc2S3vWhkwjIlGhvtS

# From SQL to Pandas Challenge 3
"""

# import libraries
import pandas as pd

# load data
# This code is made to load our data stored on Google Drive
def gd_path(file_id):
    """Generate a shareable link from Google Drive file id."""
    return f"https://drive.google.com/uc?export=download&id={file_id}"

# Google Drive file ids
files_id = {
    "titles": "1PLdn50N9GRa53ZbuVWo0l47F_IXdvlEm",
    "sales": "1fzFc9rwYmVIPaGOFmhLVxCi3kg19vNU2",
    "authors": "1fEF89Nhe61EebAljKlwFwfEuokK0o6aJ"
}

# Read data from Google Drive
sales = pd.read_csv(gd_path(files_id["sales"]), sep=";")
authors = pd.read_csv(gd_path(files_id["authors"]), sep=";")
titles = pd.read_csv(gd_path(files_id["titles"]), sep=";")

"""## 1.&nbsp;Select the title and ytd_sales from the table titles. Order them by the year to date sales."""

titles[['title', 'ytd_sales']].sort_values(by = 'ytd_sales')

"""### Hint:

In SQL, the syntax is:

```sql
SELECT
	title,
    ytd_sales
FROM
	titles
ORDER BY
	ytd_sales;
```

## 2.&nbsp;Repeat the same query, but this time sort the titles in descending order
"""

titles[['title', 'ytd_sales']].sort_values(by = 'ytd_sales', ascending = False)

"""### Hint:

In SQL, the syntax is:

```sql
SELECT
	title,
    ytd_sales
FROM
	titles
ORDER BY
	ytd_sales desc;
```

## 3.&nbsp;Select the top 5 titles with the most ytd_sales from the table titles
"""

titles[['title', 'ytd_sales']].sort_values(by = 'ytd_sales', ascending = False).head(5)

"""### Hint:

In SQL, the syntax is:

```sql
SELECT title, ytd_sales FROM titles
ORDER BY ytd_sales DESC
LIMIT 5;
```

## 4.&nbsp;What's the maximum amount of books ever sold in a single sale?
"""

sales['qty'].max()

"""### Hint:

In SQL, the syntax is:

```sql
SELECT MAX(qty)
FROM sales;
```

## 5.&nbsp;What's the price of the cheapest book?
"""

titles[titles['price'] > 0]['price'].min()
titles['price'].min()

"""### Hint:

In SQL, the syntax is:

```sql
SELECT MIN(price)
FROM titles;
```

## 6.&nbsp;How many rows are there in the table authors?
"""

authors.count()['au_id']

"""### Hint:

In SQL, the syntax is:

```sql
SELECT COUNT(au_id)
FROM authors;
```

## 7.&nbsp;What's the total amount of year-to-date sales?
"""

titles['ytd_sales'].sum()

"""### Hint:

In SQL, the syntax is:

```sql
SELECT SUM(ytd_sales)
FROM titles;
```

## 8.&nbsp;What's the average price of books?
"""

titles['price'].mean()

"""### Hint:

In SQL, the syntax is:

```sql
SELECT AVG(price)
FROM titles;
```

## 9.&nbsp;In a single query, select the count, average and sum of quantity in the table sales
"""

sales['qty'].agg(['count', 'mean', 'sum'])

"""### Hint:

In SQL, the syntax is:

```sql
SELECT COUNT(qty), AVG(qty), SUM(qty)
FROM sales;
```
"""