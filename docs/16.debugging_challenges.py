# -*- coding: utf-8 -*-
"""16-debugging-challenges.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1N19b3atk6lSlm6sqJ2u_zbrvrnUQc-_c

# Debugging Python code

Go through the exercises below.

- Each exercise contains some code with **one or more mistakes**.
- **Important**: note that the mistakes can either prompt an error or not. Some mistakes are "logical errors", and you will have to understand why the output is not the desired one.
- There might be multiple ways to fix the mistakes.
- Improving the code readability is also encouraged.
"""

# data creation
beatles = ["John Lennon", "Paul McCartney", "George Harrison", "Ringo Starr"]

numbers = [1, 2, 3, 4, 5]

capitals = {"Germany": "Berlin",
            "Russia": "Moscow",
            "France": "Paris",
            "China": "Beijing",
            "Egypt": "Cairo",
            "Brazil": "Sao Paulo"
            }

top_profitable_films = {
    "Film": ["Avengers: Endgame", "Avatar", "Titanic", "Star Wars: The Force Awakens", "Jurassic World",
             "The Lion King", "The Avengers", "Frozen II", "Frozen", "Beauty and the Beast"],
    "Year": ["2019", "2007", "1997", "2015", "2015", "2019", "2012", "2019", "2013", "2017"],
    "Worldwide Gross (in billions)": ["2.798", "2.789", "2.194", "2.073", "1.673", "1.656", "1.519",
                                      "1.450", "1.276", "1.263"]
    }

capitals['Brazil'] = 'Brasília'
capitals

"""## Exercise 1:"""

capitals['Brazil'] = 'Brasília'
for c in capitals.keys():
  print(f"{capitals[c]} is the capital of {c}.")

"""## Exercise 2:
Let's imagine we want to show our love for Ringo Starr and print a love statement for him as many times as numbers are in the `numbers` list. For all Beatles who are not Ringo, we want to print as many times a hate statement. The output should look like this:

```
I hate John Lennon!
I hate Paul McCartney!
I hate George Harrison!
I love Ringo Starr!


I hate John Lennon!
I hate Paul McCartney!
I hate George Harrison!
I love Ringo Starr!


I hate John Lennon!
I hate Paul McCartney!
I hate George Harrison!
I love Ringo Starr!


I hate John Lennon!
I hate Paul McCartney!
I hate George Harrison!
I love Ringo Starr!


I hate John Lennon!
I hate Paul McCartney!
I hate George Harrison!
I love Ringo Starr!
```


"""

for n in numbers:
  for beatle in beatles:
    if beatle == "Ringo Starr":
      print(f"I love {beatle}!")
    if beatle != "Ringo Starr":
      print(f"I hate {beatle}!")
  print("\n")

"""## Exercise 3:"""

top_profitable_films = pd.DataFrame(top_profitable_films)
top_profitable_films.head

# your code here
import pandas as pd
top_profitable_films = pd.DataFrame(top_profitable_films)
top_profitable_films.head(10)

"""## Exercise 4:

We realised that, in our top_films_df, the year of the movie Avatar is wrong. We want to replace it for the correct one, 2009:
"""

top_films_df[top_films_df["Film"]=="Avatar"]["Year"] = "2009"

top_profitable_films.loc[top_profitable_films["Film"]=="Avatar", "Year"] = "2009"
top_profitable_films

# OR
print(top_profitable_films)

top_profitable_films.info()

top_profitable_films_2 = {
    "Film": ["Avengers: Endgame", "Avatar", "Titanic", "Star Wars: The Force Awakens", "Jurassic World",
             "The Lion King", "The Avengers", "Frozen II", "Frozen", "Beauty and the Beast"],
    "Year": ["2019", "2007", "1997", "2015", "2015", "2019", "2012", "2019", "2013", "2017"],
    "Worldwide Gross (in billions)": ["2.798", "2.789", "2.194", "2.073", "1.673", "1.656", "1.519",
                                      "1.450", "1.276", "1.263"]
    }

top_profitable_films_2["Year"][1]

"""## Exercise 5:

We want to get the average gross profit of all films:
"""

pd.to_numeric(top_profitable_films["Worldwide Gross (in billions)"]).mean()