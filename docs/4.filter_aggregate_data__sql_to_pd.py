# -*- coding: utf-8 -*-
"""CÃ³pia de 4-filter-aggregate-data__sql-to-pd.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ABaGuSO15mZrj9t4PYLRCVVwmPx0hIDv

# From SQL to Pandas Challenge 4
"""

# import libraries
import pandas as pd

# load data
# This code is made to load our data stored on Google Drive
def gd_path(file_id):
    """Generate a shareable link from Google Drive file id."""
    return f"https://drive.google.com/uc?export=download&id={file_id}"

# Google Drive file ids
files_id = {
    "titles": "1PLdn50N9GRa53ZbuVWo0l47F_IXdvlEm",
    "sales": "1fzFc9rwYmVIPaGOFmhLVxCi3kg19vNU2",
    "publishers": "1s9E8_AVOziTrowb3wyh2jg3PV763VOyq",
    "employee": "1h9mUjsVqpP74b1w0x7KOw37n_n9Ulkt5",
    "authors": "1fEF89Nhe61EebAljKlwFwfEuokK0o6aJ"
}

# Read data from Google Drive
sales = pd.read_csv(gd_path(files_id["sales"]), sep=";")
authors = pd.read_csv(gd_path(files_id["authors"]), sep=";")
publishers = pd.read_csv(gd_path(files_id["publishers"]), sep=";")
titles = pd.read_csv(gd_path(files_id["titles"]), sep=";")
employee = pd.read_csv(gd_path(files_id["employee"]), sep=";")

"""## 1.&nbsp;From how many different states are our authors?"""

authors['state'].unique().size

"""### Hint:

In SQL the syntax is:

```sql
SELECT COUNT(DISTINCT state)
FROM authors;
```

## 2.&nbsp;How many publishers are based in the USA?
"""

(publishers['country'] == 'USA').sum()

"""### Hint:

In SQL the syntax is:

```sql
SELECT  COUNT(pub_id)
FROM publishers
WHERE country ="USA" ;
```

## 3.&nbsp;What's the average quantity of titles sold per sale by store 7131?
"""

sales.loc[sales['stor_id'] == 7131, 'qty'].mean()

"""### Hint:

In SQL the syntax is:

```sql
SELECT AVG(qty)
FROM sales
WHERE stor_id=7131;
```

## 4.&nbsp;When was the employee with the highest level hired?
"""

employee.sort_values(by = 'job_lvl').tail(1)['hire_date']

"""### Hint:

In SQL the syntax is:

```sql
SELECT hire_date
FROM employee
ORDER BY job_lvl DESC
LIMIT 1;
```

## 5.&nbsp;What's the average price of psychology books?
"""

titles[titles['type'] == 'psychology']['price'].mean()

"""### Hint:

In SQL the syntax is:

```sql
SELECT AVG(price)
FROM titles
WHERE type = "psychology";
```

## 6.&nbsp;Which category of books has had more year-to-date sales, "business" or "popular_comp"? You can write two queries to answer this question.

### business
"""

'business' if titles.loc[titles['type'] == 'business', 'ytd_sales'].sum() > titles.loc[titles['type'] == 'popular_comp', 'ytd_sales'].sum() else 'popular_comp'

"""### Hint:

In SQL the syntax is:

```sql
SELECT SUM(ytd_sales), type
FROM titles
WHERE type = "business";
```

### popular_comp
"""



"""### Hint:

In SQL the syntax is:

```sql
SELECT SUM(ytd_sales), type
FROM titles
WHERE type = "popular_comp";
```

## 7.&nbsp;What's the title and the price of the most expensive book?
"""

titles[['title', 'price']].sort_values(by = 'price').tail(1)

"""### Hint:

In SQL the syntax is:

```sql
SELECT title, price
FROM titles
ORDER BY price DESC
LIMIT 1;
```

## 8.&nbsp;What's the price of the most expensive psychology book?
"""

titles.loc[titles['type'] == 'psychology', 'price'].sort_values().tail(1)

"""### Hint:

In SQL the syntax is:

```sql
SELECT MAX(price)
FROM titles
WHERE type = "psychology";
```

## 9.&nbsp;How many authors live in either San Jose or Salt Lake City?
"""

authors['city'].isin(['San Jose', 'Salt Lake City']).sum()

"""### Hint:

In SQL the syntax is:

```sql
SELECT COUNT(au_id)
FROM authors
WHERE (city = "San Jose"
OR city = "Salt Lake City");
```
"""